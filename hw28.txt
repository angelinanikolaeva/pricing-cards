1. Кратко опишите основные отличия `state` от `props`. 
Значения в state можно изменять, состояние хранится в компоненте, а пропсы приходят извне

2. Какую ошибку я допустила в следующем коде и как ее исправить:

    ```jsx
    handleChange = () => {
        const chechedArr = this.state.arr; // [1,2,3] 
    		chechedArr.push(5); // [1,2,3,5] 
        this.setState({
          arr: chechedArr,
        });
      };
    ```
Вместо checked - cheched :)))
3. Можно ли повесить на один элемент несколько обработчиков событий?
Да 

4. Каким образом можно изменить `state`?
 С помощью метода setState

5. Попробуйте предсказать какие сообщения будут в консоли и объяснить результат:
false из-за асинхрона метода 

6. Какими способами можно задать функцию `handleChange` и какой из них является самым правильным?
Через стрелочную и обычную функции. Лучше стрелочная из-за производительности и удобства

7. Чем отличаются классовые и функциональные компоненты? Какие из них предпочтительнее в 2021 году?
Ничем, классовые - это объектно ориентированный подход, а функции - декларативный. Функциональный удобнее в использовании.

8. Есть ли `this` в функциональных компонентах? Как можно получить к нему доступ?
Нет, используем хуки

9. Можно ли использовать `props` и `state` одновременно?
Да

10. Где можно задать `state` без использования команды `this.setState`?
В конструкторе классового компонента

11. Может ли состояние классового компонента не быть объектом? А функционального?
Нет,  а у функционального может (число, строка и тд)

12. Способны ли функциональные компоненты самостоятельно хранить состояние?
Не в самой функции, мы обращаемся к функции(хуку) useState, которая возвращает состояние и функцию для обновления состояния

13. Как использовать хуки в классовых компонентах?
Никак

14. А как задать начальное состояние `props`, если они еще не были переданы?
В классовом: static defaultprops, а в функциоальном:  const { theme = 'secondary', label = 'Button Text', ...restProps } = props;